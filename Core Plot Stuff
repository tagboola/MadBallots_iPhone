
GOES IN TicketViewController...


//            
//            CPTGraphHostingView *hostingView = [[CPTGraphHostingView alloc] initWithFrame:self.tableView.bounds];
//            hostingView.backgroundColor = [UIColor grayColor];
//            graph = [[CPTXYGraph alloc] initWithFrame: hostingView.bounds];
//            
//            hostingView.hostedGraph = graph;
//            graph.plotAreaFrame.paddingLeft	  = 30.0;
//            graph.plotAreaFrame.paddingRight  = 50.0;
//            graph.plotAreaFrame.paddingTop = 10.0;
//
//            
//            CPTXYPlotSpace *plotSpace = (CPTXYPlotSpace *)graph.defaultPlotSpace;
//            plotSpace.xRange = [CPTPlotRange plotRangeWithLocation:CPTDecimalFromFloat(0)
//                                                            length:CPTDecimalFromFloat([candidates count])];
//            plotSpace.yRange = [CPTPlotRange plotRangeWithLocation:CPTDecimalFromFloat(0)
//                                                            length:CPTDecimalFromFloat([candidates count])];
//            
//            // Line styles
//            CPTMutableLineStyle *axisLineStyle = [CPTMutableLineStyle lineStyle];
//            axisLineStyle.lineWidth = 3.0;
//            
//            CPTMutableLineStyle *majorTickLineStyle = [axisLineStyle mutableCopy];
//            majorTickLineStyle.lineWidth = 3.0;
//            majorTickLineStyle.lineCap	 = kCGLineCapRound;
//            
//            CPTMutableLineStyle *minorTickLineStyle = [axisLineStyle mutableCopy];
//            minorTickLineStyle.lineWidth = 2.0;
//            minorTickLineStyle.lineCap	 = kCGLineCapRound;
//            
//            // Text styles
//            CPTMutableTextStyle *axisTitleTextStyle = [CPTMutableTextStyle textStyle];
//            axisTitleTextStyle.fontName = @"Marker Felt";
//            axisTitleTextStyle.fontSize = 14.0;
//            
//            
//            CPTXYAxisSet *axisSet = (CPTXYAxisSet *)graph.axisSet;
//            axisSet.xAxis.labelingPolicy = CPTAxisLabelingPolicyNone;
//            axisSet.xAxis.majorIntervalLength = CPTDecimalFromInt([candidates count]);
//            axisSet.xAxis.titleTextStyle	= axisTitleTextStyle;
//
//            NSMutableArray *labels = [NSMutableArray array];
//            int maxLabelHeight = 0;
//            for(int ii = 0; ii < [candidates count]; ii++){
//                Candidate *candidate = [candidates objectAtIndex:ii];
//                CPTAxisLabel *label; 
//                label = [[CPTAxisLabel alloc] initWithText:candidate.value textStyle:axisSet.xAxis.labelTextStyle];
//                
//                label.tickLocation = CPTDecimalFromFloat(ii+.5);
//                label.offset = 5;
//                [labels addObject:label];
//                maxLabelHeight = label.contentLayer.bounds.size.width+label.offset > maxLabelHeight ? label.contentLayer.bounds.size.width+label.offset : maxLabelHeight;
//            }
//            
//            graph.plotAreaFrame.paddingBottom = maxLabelHeight;
//            axisSet.xAxis.axisLabels = [NSSet setWithArray:labels];
//            axisSet.xAxis.labelRotation = M_PI/4;
//            axisSet.yAxis.labelingPolicy = CPTAxisLabelingPolicyFixedInterval;
//            NSNumberFormatter *yAxisFormatter = [[NSNumberFormatter alloc] init];
//            [yAxisFormatter setMaximumFractionDigits:0];
//            axisSet.yAxis.labelFormatter = yAxisFormatter;
//            axisSet.yAxis.minorTicksPerInterval = 0;
//            axisSet.yAxis.majorIntervalLength = CPTDecimalFromInt(1);
//            axisSet.yAxis.majorTickLineStyle = majorTickLineStyle;
//            
//            
//            CPTBarPlot *barPlot = [CPTBarPlot tubularBarPlotWithColor:[CPTColor greenColor] horizontalBars:NO];
//            barPlot.barOffset = CPTDecimalFromFloat(0.5);
//            barPlot.identifier = @"Graph";
//            barPlot.dataSource = self;
//            [graph addPlot:barPlot];
//            [self.tableView addSubview:hostingView];






//#pragma mark Bar Plot data source methods
//
//-(NSNumber *)numberForPlot:(CPTPlot *)plot field:(NSUInteger)fieldEnum 
//			   recordIndex:(NSUInteger)index;
//{
//    NSNumber *vote = [votes objectAtIndex:index];
//    switch (fieldEnum) {
//        case CPTScatterPlotFieldX:
//            return [NSNumber numberWithInt:index];
//            break;
//        case CPTScatterPlotFieldY:
//            return vote;
//            break;
//        default:
//            return [NSNumber numberWithInteger:-1];
//    }
//}
//
//- (NSUInteger) numberOfRecordsForPlot:(CPTPlot *)plot{
//    return [candidates count];
//}
// 
            
